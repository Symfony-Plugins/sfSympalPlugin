<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginContentTable extends Doctrine_Table
{
  public function getTypeQuery($typeName)
  {
    $table = Doctrine::getTable($typeName);

    if (method_exists($table, 'getContentQuery'))
    {
      $q = $table->getContentQuery();
    } else {
      $q = $this->getBaseQuery();

      if (sfConfig::get('sf_logging_enabled'))
      {
        sfContext::getInstance()->getLogger()->notice('To improve performance you should have a callable method named "getContentQuery()" on your table class that efficiently selects all the required data for your content type with joins and specific selects.');
      }
    }

    $q->innerJoin('c.'.$typeName.' cr');

    if ($table->hasRelation('Translation'))
    {
      $q->leftJoin('cr.Translation crt');
    }

    $q = sfProjectConfiguration::getActive()->getEventDispatcher()->filter(new sfEvent($this, 'sympal.load_'.sfInflector::tableize($typeName).'_query'), $q)->getReturnValue();

    return $q;
  }

  public function getContent($params = array())
  {
    $request = sfContext::getInstance()->getRequest();
    $contentType = $request->getParameter('sympal_content_type');
    $contentId = $request->getParameter('sympal_content_id');
    $contentSlug = $request->getParameter('sympal_content_slug');
    $q = $this->getTypeQuery($contentType);

    if ($contentId)
    {
      $q->andWhere('c.id = ?', $contentId);
    } else if ($contentSlug) {
      $q->andWhere('c.slug = ?', $contentSlug);
    }

    foreach ($params as $key => $value)
    {
      if ($key == 'id' && $contentId || $key == 'slug' && $contentSlug)
      {
        continue;
      }

      if ($this->hasField($key))
      {
        $q->andWhere('c.'.$key.' = ?', $value);
      } else if ($this->getRelation($contentType)->getTable()->hasField($key)) {
        $q->andWhere('cr.'.$key.' = ?', $value);
      }
    }

    $q = sfProjectConfiguration::getActive()->getEventDispatcher()->filter(new sfEvent($this, 'sympal.filter_get_content_query'), $q)->getReturnValue();

    $content = $q->fetchOne();

    $content = sfProjectConfiguration::getActive()->getEventDispatcher()->filter(new sfEvent($this, 'sympal.filter_get_content'), $content)->getReturnValue();

    return $content;
  }

  public function getBaseQuery()
  {
    $sympalContext = sfSympalContext::getInstance();
    $q = Doctrine_Query::create()
      ->from('Content c')
      ->leftJoin('c.Slots sl')
      ->leftJoin('sl.Type sty')
      ->leftJoin('c.Type ty')
      ->leftJoin('ty.ContentTemplates t')
      ->leftJoin('c.MasterMenuItem m')
      ->leftJoin('c.MenuItem mm')
      ->leftJoin('c.CreatedBy u')
      ->innerJoin('c.Site csi WITH csi.slug = ?', $sympalContext->getSite());

    if (!sfSympalToolkit::isEditMode())
    {
      $q->andWhere('c.is_published = 1')
        ->andWhere('c.date_published < NOW()');
    }

    if (sfSympalConfig::isI18nEnabled('ContentSlot'))
    {
      $q->leftJoin('sl.Translation slt');
    }

    $q = sfProjectConfiguration::getActive()->getEventDispatcher()->filter(new sfEvent($this, 'sympal.filter_content_base_query'), $q)->getReturnValue();

    return $q;
  }
}