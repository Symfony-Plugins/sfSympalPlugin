CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME, updated_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME, updated_at DATETIME, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME, updated_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME, updated_at DATETIME, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME, updated_at DATETIME, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME, updated_at DATETIME, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME, updated_at DATETIME, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE comment (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Pending' NOT NULL, user_id INT, name VARCHAR(255), subject VARCHAR(255), body LONGTEXT NOT NULL, created_at DATETIME, updated_at DATETIME, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event (id BIGINT AUTO_INCREMENT, name VARCHAR(255), body LONGTEXT, content_id INT, INDEX content_id_idx (content_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE forgot_password (id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE menu_item_translation (id INT, label VARCHAR(255), lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE menu_item (id INT AUTO_INCREMENT, site_id INT NOT NULL, content_type_id INT, content_id INT, name VARCHAR(255) NOT NULL, custom_path VARCHAR(255), is_content_type_list TINYINT(1) DEFAULT '0', requires_auth TINYINT(1), requires_no_auth TINYINT(1), is_primary TINYINT(1), is_published TINYINT(1), date_published DATETIME, slug VARCHAR(255), root_id INT, lft INT, rgt INT, level SMALLINT, UNIQUE INDEX sluggable_idx (slug), INDEX content_id_idx (content_id), INDEX site_id_idx (site_id), INDEX content_type_id_idx (content_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE menu_item_group (menu_item_id INT, group_id INT, PRIMARY KEY(menu_item_id, group_id)) ENGINE = INNODB;
CREATE TABLE menu_item_permission (menu_item_id INT, permission_id INT, PRIMARY KEY(menu_item_id, permission_id)) ENGINE = INNODB;
CREATE TABLE page (id INT AUTO_INCREMENT, content_id INT, title VARCHAR(255) NOT NULL, disable_comments TINYINT(1), INDEX content_id_idx (content_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content (id INT AUTO_INCREMENT, site_id INT NOT NULL, content_type_id INT NOT NULL, content_template_id INT, master_menu_item_id INT, last_updated_by INT, created_by INT, locked_by INT, is_published TINYINT(1), date_published DATETIME, custom_path VARCHAR(255), layout VARCHAR(255), slug VARCHAR(255), created_at DATETIME, updated_at DATETIME, INDEX master_menu_item_id_idx (master_menu_item_id), INDEX last_updated_by_idx (last_updated_by), INDEX created_by_idx (created_by), INDEX locked_by_idx (locked_by), INDEX site_id_idx (site_id), INDEX content_type_id_idx (content_type_id), INDEX content_template_id_idx (content_template_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content_comment (content_id INT, comment_id INT, PRIMARY KEY(content_id, comment_id)) ENGINE = INNODB;
CREATE TABLE content_group (content_id INT, group_id INT, PRIMARY KEY(content_id, group_id)) ENGINE = INNODB;
CREATE TABLE content_permission (content_id INT, permission_id INT, PRIMARY KEY(content_id, permission_id)) ENGINE = INNODB;
CREATE TABLE content_slot_translation (id INT, value LONGTEXT, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE content_slot (id INT AUTO_INCREMENT, content_id INT NOT NULL, content_slot_type_id INT NOT NULL, is_column TINYINT(1) DEFAULT '0', name VARCHAR(255) NOT NULL, INDEX content_id_idx (content_id), INDEX content_slot_type_id_idx (content_slot_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content_slot_type (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content_template (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, type VARCHAR(255), content_type_id INT, partial_path VARCHAR(255), component_path VARCHAR(255), body LONGTEXT, INDEX content_type_id_idx (content_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content_type (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, label VARCHAR(255) NOT NULL, plugin_name VARCHAR(255), list_path VARCHAR(255), view_path VARCHAR(255), layout VARCHAR(255), slug VARCHAR(255), UNIQUE INDEX sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE site (id INT AUTO_INCREMENT, layout VARCHAR(255), title VARCHAR(255), description LONGTEXT, slug VARCHAR(255), UNIQUE INDEX sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_profile (id BIGINT AUTO_INCREMENT, user_id INT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255), content_id INT, INDEX user_id_idx (user_id), INDEX content_id_idx (content_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE sf_guard_group_permission ADD FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE comment ADD FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE event ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE forgot_password ADD FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE menu_item_translation ADD FOREIGN KEY (id) REFERENCES menu_item(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE menu_item ADD FOREIGN KEY (site_id) REFERENCES site(id) ON DELETE CASCADE;
ALTER TABLE menu_item ADD FOREIGN KEY (content_type_id) REFERENCES content_type(id) ON DELETE CASCADE;
ALTER TABLE menu_item ADD FOREIGN KEY (content_id) REFERENCES content(id);
ALTER TABLE menu_item_group ADD FOREIGN KEY (menu_item_id) REFERENCES menu_item(id) ON DELETE CASCADE;
ALTER TABLE menu_item_group ADD FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE menu_item_permission ADD FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE menu_item_permission ADD FOREIGN KEY (menu_item_id) REFERENCES menu_item(id) ON DELETE CASCADE;
ALTER TABLE page ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE content ADD FOREIGN KEY (site_id) REFERENCES site(id) ON DELETE CASCADE;
ALTER TABLE content ADD FOREIGN KEY (master_menu_item_id) REFERENCES menu_item(id) ON DELETE CASCADE;
ALTER TABLE content ADD FOREIGN KEY (locked_by) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE content ADD FOREIGN KEY (last_updated_by) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE content ADD FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE content ADD FOREIGN KEY (content_type_id) REFERENCES content_type(id) ON DELETE CASCADE;
ALTER TABLE content ADD FOREIGN KEY (content_template_id) REFERENCES content_template(id) ON DELETE SET NULL;
ALTER TABLE content_comment ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE content_comment ADD FOREIGN KEY (comment_id) REFERENCES comment(id) ON DELETE CASCADE;
ALTER TABLE content_group ADD FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE content_group ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE content_permission ADD FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE content_permission ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE content_slot_translation ADD FOREIGN KEY (id) REFERENCES content_slot(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE content_slot ADD FOREIGN KEY (content_slot_type_id) REFERENCES content_slot_type(id) ON DELETE CASCADE;
ALTER TABLE content_slot ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE content_template ADD FOREIGN KEY (content_type_id) REFERENCES content_type(id);
ALTER TABLE user_profile ADD FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_profile ADD FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
