# I18n Disabled by Default

Turned I18n off by default as most sites won't utilize it. You can enable I18n
easily with the following command:

    $ php symfony sympal:configure i18n=true

# Moved sfSympalToolkit Static Methods

The following methods have been changed from static methods to public methods
and moved to `sfSympalContext`:

 * setCurrentMenuItem()
 * getCurrentMenuItem()
 * setCurrentContent()
 * getCurrentContent()
 * isEditMode()

You can retrieve the current `sfSympalContext` instance with the following code:

    [php]
    $sympalContext = sfSympalContext::getInstance();

If you are in Symfony actions you can do:

    [php]
    $sympalContext = $this->getSympalContext();

Now you can call those moved methods:

    [php]
    $sympalContext->setCurrentMenuItem($menuItem);

# Replaced sfSympalUserPlugin with sfDoctrineGuardPlugin

The switch to sfDoctrineGuardPlugin is quite simple as the plugins are almost
identical so we just need to rename and remove some orphan files:

First we need to remove the `sfSympalUserPlugin` classes:

    $ rm -rf lib/*/doctrine/sfSympalUserPlugin

Be sure to clear your cache and re-build all your classes so the classes for
`sfDoctrineGuardPlugin` are generated:

    $ php symfony cc
    $ php symfony doctrine:build --all-classes

Now we just need to rename the following tables:

 * forgot_password => sf_guard_forgot_password
 * groups => sf_guard_group
 * group_permission => sf_guard_group_permission
 * permission => sf_guard_permission
 * users => sf_guard_user
 * user_group => sf_guard_user_group
 * user_permission => sf_guard_user_permission

Changing to `sfDoctrineGuardPlugin` also means that if you referenced any of the old
models you will need to update your code to reference the new model names.

For example if you referenced `User` before, you should now reference `sfGuardUser`:

    [php]
    $user = Doctrine_Core::getTable('sfSympalUser')->find(1);

The above should be changed to:

    [php]
    $user = Doctrine_Core::getTable('sfGuardUser')->find(1);

The models which need be prefixed with `sfGuard` are:

 * ForgotPassword => sfGuardForgotPassword
 * Group => sfGuardGroup
 * GroupPermission => sfGuardGroupPermission
 * Permission => sfGuardPermission
 * User => sfGuardUser
 * UserGroup => sfGuardUserGroup
 * UserPermission => sfGuardUserPermission

# All Model, Form and Filter classes prefixed with sfForm

This change should be an easy upgrade. You just need to rename any usage of model,
form and filter classes to include the sfSympal prefix.

For example, the following:

    $content = new Content::createNew('Page');

Should be changed to:

    $content = new sfSympalContent::createNew('sfSympalPage');

# Removed Content Slot Type Model

As this model is not really needed, it has been removed completely and now the type
of a slot is just stored as a string type on each slot record.

# Removed is_published flag

The date_published field is enough to know that a record is published or not so
this field was removed from content and menu items.